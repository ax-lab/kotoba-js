{
	"include": ["./src/**/*.ts", "./src/**/*.tsx"],
	"exclude": ["node_modules/**", "./src/**/*.test.ts"],

	"compilerOptions": {
		/* Visit https://aka.ms/tsconfig.json to read more about this file */

		/* Basic Options */

		// Stylize errors and messages using color and context
		"pretty": true,
		// Enable incremental compilation
		"incremental": true,

		// Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'.
		"target": "es2017",
		// Specify library files to be included in the compilation.
		"lib": ["es2017", "dom", "es2019"],
		// Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'.
		"module": "commonjs",
		// Specifies module resolution strategy: 'node' (Node) or 'classic' (TypeScript pre 1.6)
		"moduleResolution": "node",
		// Type declaration files to be included in compilation.
		"types": ["node"],
		// Specify list of directories for type definition files to be included.
		"typeRoots": ["node_modules/@types"],

		// Redirect output structure to the directory.
		"outDir": "./build/main",
		// Generates corresponding '.d.ts' file.
		"declaration": true,
		// Specify output directory for generated declaration files.
		"declarationDir": "./build/main/types",
		// Generates a sourcemap for each corresponding '.d.ts' file.
		"declarationMap": true,
		// Generates corresponding '.map' file.
		"sourceMap": true,

		// "allowJs": true,                       // Allow javascript files to be compiled.
		// "checkJs": true,                       // Report errors in .js files.
		// "outFile": "",                         // Concatenate and emit output to single file.
		// "rootDir": "./",                       // Specify the root directory of input files. Use to control the output directory structure with --outDir.
		// "composite": true,                     // Enable project compilation
		// "tsBuildInfoFile": "./",               // Specify file to store incremental compilation information
		// "removeComments": true,                // Do not emit comments to output.
		// "noEmit": true,                        // Do not emit outputs.
		// "importHelpers": true,                 // Import emit helpers from 'tslib'.
		// "downlevelIteration": true,            // Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'.
		// "isolatedModules": true,               // Transpile each file as a separate module (similar to 'ts.transpileModule').

		/* React settings */

		// Specify JSX code generation: 'preserve', 'react', 'react-jsx', 'react-jsxdev' or'react-native'.
		"jsx": "react",
		// Specify the JSX factory function to use when targeting react JSX emit, e.g. 'React.createElement' or 'h'.
		"jsxFactory": "React.createElement",
		// Specify the JSX Fragment reference to use for fragements when targeting react JSX emit, e.g. 'React.Fragment' or 'Fragment'.
		"jsxFragmentFactory": "React.Fragment",

		/* Strict Type-Checking Options */

		// Enable all strict type-checking options.
		"strict": true,

		// "noImplicitAny": true,                 // Raise error on expressions and declarations with an implied 'any' type.
		// "strictNullChecks": true,              // Enable strict null checks.
		// "strictFunctionTypes": true,           // Enable strict checking of function types.
		// "strictBindCallApply": true,           // Enable strict 'bind', 'call', and 'apply' methods on functions.
		// "strictPropertyInitialization": true,  // Enable strict checking of property initialization in classes.
		// "noImplicitThis": true,                // Raise error on 'this' expressions with an implied 'any' type.
		// "alwaysStrict": true,                  // Parse in strict mode and emit "use strict" for each source file.

		/* Additional Checks */

		// Report error when not all code paths in function return a value.
		"noImplicitReturns": true,

		// "noUnusedLocals": true,                // Report errors on unused locals.
		// "noUnusedParameters": true,            // Report errors on unused parameters.
		// "noFallthroughCasesInSwitch": true,    // Report errors for fallthrough cases in switch statement.
		// "noUncheckedIndexedAccess": true,      // Include 'undefined' in index signature results

		/* Module Resolution Options */

		// Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'.
		"esModuleInterop": true,

		// "moduleResolution": "node",            // Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6).
		// "baseUrl": "./",                       // Base directory to resolve non-absolute module names.
		// "paths": {},                           // A series of entries which re-map imports to lookup locations relative to the 'baseUrl'.
		// "rootDirs": [],                        // List of root folders whose combined content represents the structure of the project at runtime.
		// "typeRoots": [],                       // List of folders to include type definitions from.
		// "types": [],                           // Type declaration files to be included in compilation.
		// "allowSyntheticDefaultImports": true,  // Allow default imports from modules with no default export. This does not affect code emit, just typechecking.
		// "preserveSymlinks": true,              // Do not resolve the real path of symlinks.
		// "allowUmdGlobalAccess": true,          // Allow accessing UMD globals from modules.

		/* Source Map Options */

		// "sourceRoot": "",                      // Specify the location where debugger should locate TypeScript files instead of source locations.
		// "mapRoot": "",                         // Specify the location where debugger should locate map files instead of generated locations.
		// "inlineSourceMap": true,               // Emit a single file with source maps instead of having a separate file.
		// "inlineSources": true,                 // Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set.

		/* Experimental Options */

		// "experimentalDecorators": true,        // Enables experimental support for ES7 decorators.
		// "emitDecoratorMetadata": true,         // Enables experimental support for emitting type metadata for decorators.

		/* Advanced Options */

		// Skip type checking of declaration files.
		"skipLibCheck": true,
		// Disallow inconsistently-cased references to the same file.
		"forceConsistentCasingInFileNames": true
	}
}
